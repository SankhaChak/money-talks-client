import type { NextPage } from "next";
import Head from "next/head";
import Navbar from "../components/layout/Navbar";
import Container from "../components/layout/Container";
import ChatsEmptyState from "../components/chat/ChatsEmptyState";
import { useAccount } from "wagmi";
import UnAuthState from "../components/chat/UnAuthState";
import { useEffect, useState } from "react";
import useHydration from "../hooks/useHydration";
import { useUserContext } from "../context/User";
import { IFeeds } from "@pushprotocol/restapi";
import ExistingChats from "../components/chat/ExistingChats";

const Home: NextPage = () => {
  const { hasHydrated } = useHydration();
  const { isLoggedIn, getUserChats, getUserRequests } = useUserContext();

  const [userChats, setUserChats] = useState<IFeeds[]>([]);
  console.log("ðŸš€ ~ file: index.tsx:20 ~ userChats:", userChats);
  const [userRequests, setUserRequests] = useState<IFeeds[]>([]);
  console.log("ðŸš€ ~ file: index.tsx:22 ~ userRequests:", userRequests);

  useEffect(() => {
    if (isLoggedIn) {
      getUserChats().then((chats) => setUserChats(chats));
      getUserRequests().then((requests) => setUserRequests(requests));
    }
  }, [isLoggedIn, getUserChats, getUserRequests]);

  const renderMainComponent = () => {
    if (!isLoggedIn) {
      return <UnAuthState />;
    }

    if (isLoggedIn && userChats.length > 0) {
      return (
        <ExistingChats
        // chats={userChats}
        />
      );
    }

    if (isLoggedIn && userRequests.length > 0) {
      return (
        <ExistingChats
        // chats={userChats}
        />
      );
    }

    return <ChatsEmptyState />;
  };

  return (
    <div>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className="min-h-screen">
        <Navbar />
        <Container>
          {hasHydrated && <div className="mt-40">{renderMainComponent()}</div>}
        </Container>
      </main>
    </div>
  );
};

export default Home;
